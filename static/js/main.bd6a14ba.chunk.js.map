{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","handleClockSeconds","this","window","setInterval","setState","console","log","toLocaleTimeString","clearInterval","clockName","props","className","React","Component","getRandomName","value","Math","random","toString","slice","App","hasClock","handleChangeClockName","handleClockName","handleClockTurnOff","handleClockTurnOn","document","addEventListener","_","prevState","removeEventListener","ReactDOM","render","getElementById"],"mappings":"sNAMaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,mBAAqB,EALvB,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,mBAAqBE,OAAOC,aAAY,WAC3C,IAAML,EAAO,IAAIC,KAEjB,EAAKK,SAAS,CAAEN,SAEhBI,OAAOG,QAAQC,IAAIR,EAAKS,wBACvB,OAdP,kCAiBE,WACEL,OAAOM,cAAcP,KAAKD,sBAlB9B,oBAqBE,WACE,IAAQS,EAAcR,KAAKS,MAAnBD,UACAX,EAASG,KAAKJ,MAAdC,KAER,OACE,sBAAKa,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGF,IAGF,YAED,sBAAME,UAAU,cAAhB,SACGb,EAAKS,8BAlChB,GAA2BK,IAAMC,WCDjC,SAASC,IACP,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,GAQX,IAAMK,EAAb,4MACEvB,MAAQ,CACNY,UAAWK,IACXO,UAAU,GAHd,EAMEC,sBAAwB,EAN1B,EAiCEC,gBAAkB,WAChB,EAAKnB,SAAS,CAAEK,UAAWK,OAlC/B,EAqCEU,mBAAqB,WACnB,EAAKpB,SAAS,CAAEiB,UAAU,KAtC9B,EAyCEI,kBAAoB,WAClB,EAAKrB,SAAS,CAAEiB,UAAU,KA1C9B,uDAQE,WACEK,SAASC,iBAAiB,cAAe1B,KAAKuB,oBAC9CE,SAASC,iBAAiB,QAAS1B,KAAKwB,mBACxCxB,KAAKqB,sBAAwBpB,OAC1BC,YAAYF,KAAKsB,gBAAiB,QAZzC,gCAeE,SAAmBK,EAAOC,GACnB5B,KAAKJ,MAAMwB,UACdnB,OAAOM,cAAcP,KAAKqB,uBAGxBrB,KAAKJ,MAAMY,YAAcoB,EAAUpB,WACrCP,OAAOG,QAAQC,IAAf,uBACkBuB,EAAUpB,UAD5B,eAC4CR,KAAKJ,MAAMY,cAtB7D,kCA2BE,WACEiB,SAASI,oBAAoB,cAAe7B,KAAKuB,oBACjDE,SAASI,oBAAoB,QAAS7B,KAAKwB,mBAC3CvB,OAAOM,cAAcP,KAAKqB,yBA9B9B,oBA6CE,WACE,MAGIrB,KAAKJ,MAFPY,EADF,EACEA,UACAY,EAFF,EAEEA,SAGF,OACE,sBAAKV,UAAU,MAAf,UACE,6CACCU,GAAY,cAAC,EAAD,CAAOZ,UAAWA,WAtDvC,GAAyBG,IAAMC,WCb/BkB,IAASC,OACP,cAAC,EAAD,IACAN,SAASO,eAAe,W","file":"static/js/main.bd6a14ba.chunk.js","sourcesContent":["import React from 'react';\n\ninterface State {\n  date: Date,\n}\n\nexport class Clock extends React.Component<{ clockName: string }, State> {\n  state = {\n    date: new Date(),\n  };\n\n  handleClockSeconds = 0;\n\n  componentDidMount() {\n    this.handleClockSeconds = window.setInterval(() => {\n      const date = new Date();\n\n      this.setState({ date });\n\n      window.console.log(date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.handleClockSeconds);\n  }\n\n  render() {\n    const { clockName } = this.props;\n    const { date } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {date.toLocaleTimeString()}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\n\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Math.random().toString().slice(2, 6);\n\n  return `Clock-${value}`;\n}\n\ninterface State {\n  clockName: string,\n  hasClock: boolean,\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    clockName: getRandomName(),\n    hasClock: true,\n  };\n\n  handleChangeClockName = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.handleClockTurnOff);\n    document.addEventListener('click', this.handleClockTurnOn);\n    this.handleChangeClockName = window\n      .setInterval(this.handleClockName, 3300);\n  }\n\n  componentDidUpdate(_: {}, prevState: State) {\n    if (!this.state.hasClock) {\n      window.clearInterval(this.handleChangeClockName);\n    }\n\n    if (this.state.clockName !== prevState.clockName) {\n      window.console.log(\n        `Renamed from ${prevState.clockName} to ${this.state.clockName}`,\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', this.handleClockTurnOff);\n    document.removeEventListener('click', this.handleClockTurnOn);\n    window.clearInterval(this.handleChangeClockName);\n  }\n\n  handleClockName = () => {\n    this.setState({ clockName: getRandomName() });\n  };\n\n  handleClockTurnOff = () => {\n    this.setState({ hasClock: false });\n  };\n\n  handleClockTurnOn = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const {\n      clockName,\n      hasClock,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock clockName={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
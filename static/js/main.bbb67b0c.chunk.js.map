{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","handleClockSeconds","this","window","setInterval","setState","console","log","toLocaleTimeString","prevProps","props","clockName","clearInterval","className","React","Component","getRandomName","value","Math","random","toString","slice","App","hasClock","handleChangeClockName","handleClockName","handleClockTurnOff","handleClockTurnOn","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,mBAAqB,EALvB,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,mBAAqBE,OAAOC,aAAY,WAC3C,IAAML,EAAO,IAAIC,KAEjB,EAAKK,SAAS,CAAEN,SAEhBI,OAAOG,QAAQC,IAAIR,EAAKS,wBACvB,OAdP,gCAiBE,SAAmBC,GACbP,KAAKQ,MAAMC,YAAcF,EAAUE,WACrCR,OAAOG,QAAQC,IAAf,uBACkBE,EAAUE,UAD5B,eAC4CT,KAAKQ,MAAMC,cApB7D,kCAyBE,WACER,OAAOS,cAAcV,KAAKD,sBA1B9B,oBA6BE,WACE,IAAQU,EAAcT,KAAKQ,MAAnBC,UACAZ,EAASG,KAAKJ,MAAdC,KAER,OACE,sBAAKc,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGF,IAGF,YAED,sBAAME,UAAU,cAAhB,SACGd,EAAKS,8BA1ChB,GAA2BM,IAAMC,WCLjC,SAASC,IACP,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,GAQX,IAAMK,EAAb,4MACExB,MAAQ,CACNa,UAAWK,IACXO,UAAU,GAHd,EAMEC,sBAAwB,EAN1B,EAyBEC,gBAAkB,WAChB,EAAKpB,SAAS,CAAEM,UAAWK,OA1B/B,EA6BEU,mBAAqB,WACnB,EAAKrB,SAAS,CAAEkB,UAAU,KA9B9B,EAiCEI,kBAAoB,WAClB,EAAKtB,SAAS,CAAEkB,UAAU,KAlC9B,uDAQE,WACEK,SAASC,iBAAiB,cAAe3B,KAAKwB,oBAC9CE,SAASC,iBAAiB,QAAS3B,KAAKyB,mBACxCzB,KAAKsB,sBAAwBrB,OAC1BC,YAAYF,KAAKuB,gBAAiB,MAEhCvB,KAAKJ,MAAMyB,UACdpB,OAAOS,cAAcV,KAAKsB,yBAfhC,kCAmBE,WACEI,SAASE,oBAAoB,cAAe5B,KAAKwB,oBACjDE,SAASE,oBAAoB,QAAS5B,KAAKyB,mBAC3CxB,OAAOS,cAAcV,KAAKsB,yBAtB9B,oBAqCE,WACE,MAGItB,KAAKJ,MAFPa,EADF,EACEA,UACAY,EAFF,EAEEA,SAGF,OACE,sBAAKV,UAAU,MAAf,UACE,6CACCU,GAAY,cAAC,EAAD,CAAOZ,UAAWA,WA9CvC,GAAyBG,IAAMC,WCb/BgB,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.bbb67b0c.chunk.js","sourcesContent":["import React from 'react';\n\ninterface State {\n  date: Date,\n}\n\ninterface Props {\n  clockName: string;\n}\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    date: new Date(),\n  };\n\n  handleClockSeconds = 0;\n\n  componentDidMount() {\n    this.handleClockSeconds = window.setInterval(() => {\n      const date = new Date();\n\n      this.setState({ date });\n\n      window.console.log(date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.clockName !== prevProps.clockName) {\n      window.console.log(\n        `Renamed from ${prevProps.clockName} to ${this.props.clockName}`,\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.handleClockSeconds);\n  }\n\n  render() {\n    const { clockName } = this.props;\n    const { date } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {date.toLocaleTimeString()}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\n\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Math.random().toString().slice(2, 6);\n\n  return `Clock-${value}`;\n}\n\ninterface State {\n  clockName: string,\n  hasClock: boolean,\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    clockName: getRandomName(),\n    hasClock: true,\n  };\n\n  handleChangeClockName = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.handleClockTurnOff);\n    document.addEventListener('click', this.handleClockTurnOn);\n    this.handleChangeClockName = window\n      .setInterval(this.handleClockName, 3300);\n\n    if (!this.state.hasClock) {\n      window.clearInterval(this.handleChangeClockName);\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', this.handleClockTurnOff);\n    document.removeEventListener('click', this.handleClockTurnOn);\n    window.clearInterval(this.handleChangeClockName);\n  }\n\n  handleClockName = () => {\n    this.setState({ clockName: getRandomName() });\n  };\n\n  handleClockTurnOff = () => {\n    this.setState({ hasClock: false });\n  };\n\n  handleClockTurnOn = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const {\n      clockName,\n      hasClock,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock clockName={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}